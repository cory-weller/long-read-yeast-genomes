# module load snakemake
# test: snakemake -n -r
# interactive run: snakemake --cores 16
# cluster run: snakemake -j 10 --latency-wait 120 --cluster="sbatch -p quick"
# module load graphviz
# snakemake --dag | dot -Tsvg > dag.svg

# use the wildcards from bottom-up

configfile: "config_genes.yaml"

GENES = config['genes'] # protein sequences of interest
GENOMES = config['genomes']
GENOME_PATH = config['genome_path']
# GENOMES_LIST = [f'{GENOME_PATH}/{genome}' for genome in GENOMES]

localrules: all
rule all:
    input:
        expand("data/blast_gene-hits/{gene}/{genome}.tsv", gene=GENES, genome=GENOMES)

rule blastp:
    # pull orfs from each blastdb and blast against the reference
    input:
        query="data/genes/protein/{gene}.fa",
        check_db=multiext("data/blastdb/{genome}.fa", ".pdb",".phr",".pin",".pjs",".pot",".psq",".ptf",".pto"),
        db="data/blastdb/{genome}.fa"
    output:
        "data/blast_gene-hits/{gene}/{genome}.tsv"
    params:
        module="blast/2.13.0+"
    threads: 16
    shell:
        """
        module load {params.module}
        blastp -num_threads {threads} -outfmt 6 -max_hsps=1 -db {input.db} -query {input.query} -out {output}
        """
